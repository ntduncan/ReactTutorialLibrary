{"ast":null,"code":"var _jsxFileName = \"/Users/nathanduncan/react/ReactTutorialLibrary/01-starting-project/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault(); //Using state onChange is better if you need the input monitored more than once\n\n    console.log(enteredName); //Ref is better if you only need the value once\n\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n    setEnteredName(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"OtW4WQfH+l9HPCIGRWvyE1+oXJw=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/nathanduncan/react/ReactTutorialLibrary/01-starting-project/src/components/SimpleInput.js"],"names":["useState","useRef","SimpleInput","props","nameInputRef","enteredName","setEnteredName","nameInputChangeHandler","event","target","value","formSubmissionHandler","preventDefault","console","log","enteredValue","current"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,MAAlB,QAA+B,OAA/B;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,YAAY,GAAGH,MAAM,EAA3B;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMO,sBAAsB,GAAGC,KAAK,IAAI;AACtCF,IAAAA,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMC,qBAAqB,GAAGH,KAAK,IAAI;AACrCA,IAAAA,KAAK,CAACI,cAAN,GADqC,CAGrC;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ,EAJqC,CAMrC;;AACA,UAAMU,YAAY,GAAGX,YAAY,CAACY,OAAb,CAAqBN,KAA1C;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACAT,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAVD;;AAYA,sBACE;AAAM,IAAA,QAAQ,EAAEK,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,QAAQ,EAAEJ,sBAAvC;AAA+D,QAAA,GAAG,EAAEH;AAApE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA/BD;;GAAMF,W;;KAAAA,W;AAiCN,eAAeA,WAAf","sourcesContent":["import {useState, useRef} from 'react'\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value)\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    //Using state onChange is better if you need the input monitored more than once\n    console.log(enteredName);\n\n    //Ref is better if you only need the value once\n    const enteredValue = nameInputRef.current.value\n    console.log(enteredValue)\n    setEnteredName(\"\")\n  }\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className='form-control'>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={nameInputChangeHandler} ref={nameInputRef}/>\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}