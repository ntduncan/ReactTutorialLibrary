{"ast":null,"code":"var _jsxFileName = \"/Users/nathanduncan/react/ReactTutorialLibrary/01-starting-project/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [inputIsValid, setInputIsValid] = useState(\"\");\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (enteredName.trim() === '') {\n      setEnteredName;\n      return;\n    } //Using state onChange is better if you need the input monitored more than once\n\n\n    console.log(enteredName); //Ref is better if you only need the value once\n\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n    setEnteredName(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredName,\n        onChange: nameInputChangeHandler,\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"5TJnaOO/NNklQk1EHseZqlXqRdI=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/nathanduncan/react/ReactTutorialLibrary/01-starting-project/src/components/SimpleInput.js"],"names":["useState","useRef","SimpleInput","props","nameInputRef","enteredName","setEnteredName","inputIsValid","setInputIsValid","nameInputChangeHandler","event","target","value","formSubmissionHandler","preventDefault","trim","console","log","enteredValue","current"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,MAAlB,QAA+B,OAA/B;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,YAAY,GAAGH,MAAM,EAA3B;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMS,sBAAsB,GAAGC,KAAK,IAAI;AACtCJ,IAAAA,cAAc,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMC,qBAAqB,GAAGH,KAAK,IAAI;AAErCA,IAAAA,KAAK,CAACI,cAAN;;AAEA,QAAGT,WAAW,CAACU,IAAZ,OAAuB,EAA1B,EAA6B;AAC3BT,MAAAA,cAAc;AACd;AACD,KAPoC,CASrC;;;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYZ,WAAZ,EAVqC,CAYrC;;AACA,UAAMa,YAAY,GAAGd,YAAY,CAACe,OAAb,CAAqBP,KAA1C;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACAZ,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAhBD;;AAkBA,sBACE;AAAM,IAAA,QAAQ,EAAEO,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,EAAE,EAAC,MAFH;AAGA,QAAA,KAAK,EAAER,WAHP;AAIA,QAAA,QAAQ,EAAEI,sBAJV;AAKA,QAAA,GAAG,EAAEL;AALL;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA3CD;;GAAMF,W;;KAAAA,W;AA6CN,eAAeA,WAAf","sourcesContent":["import {useState, useRef} from 'react'\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [inputIsValid, setInputIsValid] = useState(\"\")\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value)\n  }\n\n  const formSubmissionHandler = event => {\n\n    event.preventDefault();\n\n    if(enteredName.trim() === ''){\n      setEnteredName\n      return;\n    }\n\n    //Using state onChange is better if you need the input monitored more than once\n    console.log(enteredName);\n\n    //Ref is better if you only need the value once\n    const enteredValue = nameInputRef.current.value\n    console.log(enteredValue)\n    setEnteredName(\"\")\n  }\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className='form-control'>\n        <label htmlFor='name'>Your Name</label>\n        <input \n        type='text' \n        id='name' \n        value={enteredName} \n        onChange={nameInputChangeHandler} \n        ref={nameInputRef}/>\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}